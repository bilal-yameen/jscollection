{"name":"Jscollection","tagline":"A powerful, easy queryable, searchable, enumerable (sync/async) javascript collection implements List, Stack, Queue, FixedQueue library for Javascript & node.js","body":"### Welcome to Powerful Javascript Collection\r\nJscollection is a powerful, easy searchable, easy enumerable javascript collection implements List, Stack, Queue, FixedQueue library for JavaScript and node.js.\r\n### Installation\r\n    npm install jscollection\r\n\r\n### Manipulating a collection is just easy\r\n    var myList = new List();\r\n    myList.add(item)               // Add an item in collection\r\n    myList.addRange(arrayOfItems)  // Add multiple items in collection\r\n    myList.insertAt(index, item);  // Insert an item at a given position\r\n    myList.removeAt(index);        // Remove an item from a given position also returns the deleted item\r\n    myList.remove(item)            // Remove an item from collection also returns the deleted item\r\n    myList.removeLast()            // Remove the last item from collection also returns the deleted item\r\n    myList.removeAt(index)         // Remove an item at specific index from collection also returns the deleted item\r\n    myList.first()                 // Get the first item from the collection\r\n    myList.last()                  // Get the last item from the collection\r\n    myList.count()                 // Get the first item from the collection\r\n    myList.any()                   // Get the first item from the collection\r\n    myList.avg()                   // Get the first item from the collection\r\n    myList.sum()                   // Get the first item from the collection\r\n\r\n### Traverse the collection asynchronously\r\n    eachAsyn(function(item,index,nextCallback){}) - travarse the collection and perform asynchronous operations for each\r\n\r\n### Execute asyncronus functions one after another\r\n    List.exeAsync(function insertIntomongo(next){\r\n            // Do operation in mongo\r\n            next(dataReturnedFromMongo); // once you are done call next\r\n    }, function insertIntoRedis(dataReturnedFromMongo, next){\r\n            // Do operation in redis\r\n            next(dataReturnedFromRedis); // // once you are done call next\r\n    }, function onDone(dataReturnedFromRedis, next){\r\n          // call the final callback here\r\n    });\r\n\r\n### Searching and Querying your Collection\r\n    select(selector function)        // Select items from collection\r\n    selectMulti(selector function)   // Select items from collections where selected item is a collection/array\r\n    where(selector function)         // Where condition in query\r\n    groupby(selector function)       // Groupby your logic in javascript \r\n    orderByAsc(comparator function)  // Sort items Ascending order\r\n    orderByDesc(comparator function) // Sort items in descending order\r\n    unique()                         // Collect only unique items from collection\r\n    top(count)                       // Collect only top N items from collection\r\n    bottom(count)                    // Collect last N items from collection\r\n    range(fromIndex,toIndex)         // Collect all items within a range\r\n\r\n### Authors and Contributors\r\n@somnathpanja (somnathpanja@gmail.com)\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://github.com/somnathpanja/jscollection/blob/master/README.md) or [report issue](https://github.com/somnathpanja/jscollection/issues) and weâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}